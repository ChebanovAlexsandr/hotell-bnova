name: Run Tests with Allure Reports

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize]

jobs:
  test_and_report:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write
      pull-requests: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install system dependencies
      run: sudo apt-get install -y unzip

    - name: Install Python dependencies
      run: |
        pip install -r requirements.txt
        pip install allure-pytest

    - name: Run pytest with Allure
      run: pytest --alluredir=./reports/allure-results --verbose

    - name: Install Allure CLI
      run: |
        wget https://repo.maven.apache.org/maven2/io/qameta/allure/allure-commandline/2.27.0/allure-commandline-2.27.0.zip
        unzip allure-commandline-2.27.0.zip -d allure-commandline
        echo "$(pwd)/allure-commandline/allure-2.27.0/bin" >> $GITHUB_PATH

    - name: Generate Allure report
      run: |
        mkdir -p ./reports/html
        allure generate ./reports/allure-results -o ./reports/html --clean

    - name: Verify report generation
      run: |
        [ -f ./reports/html/index.html ] || exit 1
        echo "Report generated successfully"

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        publish_dir: ./reports/html
        publish_branch: gh-pages
        force_orphan: true
        user_name: "GitHub Actions"
        user_email: "41898282+github-actions[bot]@users.noreply.github.com"

    - name: Add report link to PR
      if: ${{ github.event_name == 'pull_request' }}
      uses: actions/github-script@v6
      with:
        script: |
          try {
            const reportUrl = `https://${context.repo.owner}.github.io/${context.repo.repo}/`
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `üìä **Allure Report**: ${reportUrl}\n_–î–µ–ø–ª–æ–π –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –¥–æ 2 –º–∏–Ω—É—Ç_`
            })
          } catch (error) {
            core.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è: " + error.message)
          }